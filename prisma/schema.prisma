// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tbroles {
  PK_role   Int       @id @default(autoincrement())
  role      String    @unique @db.VarChar(50)
  status    Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  tbusers   tbusers[]
}

model tbusers {
  PK_user       Int             @id @default(autoincrement())
  FK_role       Int
  CI            String          @db.VarChar(20)
  firstName     String          @db.VarChar(80)
  lastName      String          @db.VarChar(80)
  email         String          @unique @db.VarChar(255)
  password      String          @db.VarChar(255)
  profileImage  String?         @db.VarChar(255)
  status        Boolean         @default(true)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?
  tbroles       tbroles         @relation(fields: [FK_role], references: [PK_role])
  tbassists     tbassists[]
  tbschedules   tbschedules[]
  tbsalaries    tbsalaries[]
  tbuserdetails tbuserdetails[]
}

model tbuserdetails {
  PK_detail   Int       @id @default(autoincrement())
  FK_user     Int
  phoneNumber String?   @db.VarChar(15)
  address     String?   @db.VarChar(255)
  dateOfBirth DateTime?
  hireDate    DateTime?
  position    String?   @db.VarChar(80)
  salary      String    @db.VarChar(30)
  status      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?

  tbusers tbusers @relation(fields: [FK_user], references: [PK_user])
}

model tbsalaries {
  PK_salary   Int       @id @default(autoincrement())
  FK_user     Int
  hoursWorked Int
  extraHours  Int
  lateHours   Int
  deductions  Decimal   @db.Decimal(10, 2)
  netSalary   Decimal   @db.Decimal(10, 2)
  paymentDate DateTime
  status      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
  tbusers     tbusers   @relation(fields: [FK_user], references: [PK_user])
}

model tbschedules {
  PK_schedule Int       @id @default(autoincrement())
  FK_user     Int
  day         String    @db.VarChar(10)
  checkIn     DateTime
  checkOut    DateTime
  status      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
  tbusers     tbusers   @relation(fields: [FK_user], references: [PK_user])
}

model tbassists {
  PK_attendance Int       @id @default(autoincrement())
  FK_user       Int
  day           DateTime
  checkIn       DateTime  @default(now())
  checkOut      DateTime?
  tbusers       tbusers   @relation(fields: [FK_user], references: [PK_user])
}

model tbcustomers {
  PK_customer  Int       @id @default(autoincrement())
  CI           String?    @db.VarChar(20)
  firstName    String   @db.VarChar(80)
  lastName     String   @db.VarChar(80)
  email        String?   @unique @db.VarChar(255)
  password     String?   @db.VarChar(255)
  profileImage String?   @db.VarChar(255)
  status       Boolean   @default(true)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime?
  tbsales      tbsales[]
}

model tbcategories {
  PK_category     Int               @id @default(autoincrement())
  name            String            @unique @db.VarChar(50)
  urlCategory     String            @unique @db.VarChar(20)
  description     String?           @db.VarChar(255)
  status          Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime?
  tbsubcategories tbsubcategories[]
}

model tbsubcategories {
  PK_subcategory Int          @id @default(autoincrement())
  FK_category    Int
  name           String       @unique @db.VarChar(50)
  urlSubcategory String       @unique @db.VarChar(20)
  description    String?      @db.VarChar(255)
  status         Boolean      @default(true)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime?
  tbcategories   tbcategories @relation(fields: [FK_category], references: [PK_category])
  tbproducts     tbproducts[]
}

model tbsizes {
  PK_size    Int          @id @default(autoincrement())
  name       String       @unique @db.VarChar(50)
  status     Boolean      @default(true)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime?
  tbproducts tbproducts[]
}

model tbproducts {
  PK_product      Int             @id @default(autoincrement())
  FK_subcategory  Int
  FK_size         Int
  SKU             String          @unique @db.VarChar(50)
  name            String          @db.VarChar(80)
  urlProduct      String          @unique @db.VarChar(80)
  regularPrice    Decimal         @db.Decimal(10, 2)
  offerPrice      Decimal?        @db.Decimal(10, 2)
  stock           Int
  description     String?         @db.VarChar(255)
  images          String[]
  urlQR           String?         @db.VarChar(255)
  status          Boolean         @default(true)
  createdAt       DateTime        @default(now())
  updated         DateTime?
  tbsubcategories tbsubcategories @relation(fields: [FK_subcategory], references: [PK_subcategory])
  tbsizes         tbsizes         @relation(fields: [FK_size], references: [PK_size])
  tbsaledetails   tbsaledetails[]
}

model tbsalesstatuses {
  PK_salestatus Int       @id @default(autoincrement())
  name          String    @unique @db.VarChar(50)
  description   String?   @db.VarChar(255)
  status        Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?
  tbsales       tbsales[]
}

model tbsales {
  PK_sale         Int             @id @default(autoincrement())
  FK_customer     Int
  FK_salestatus   Int
  totalAmount     Decimal         @db.Decimal(10, 2)
  status          Boolean         @default(true)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime?
  tbcustomers     tbcustomers     @relation(fields: [FK_customer], references: [PK_customer])
  tbsalesstatuses tbsalesstatuses @relation(fields: [FK_salestatus], references: [PK_salestatus])
  tbsaledetails   tbsaledetails[]
}

model tbsaledetails {
  PK_saledetail Int        @id @default(autoincrement())
  FK_sale       Int
  FK_product    Int
  quantity      Int
  unitPrice     Decimal    @db.Decimal(10, 2)
  subtotal      Decimal    @db.Decimal(10, 2)
  status        Boolean    @default(true)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime?
  tbsales       tbsales    @relation(fields: [FK_sale], references: [PK_sale])
  tbproducts    tbproducts @relation(fields: [FK_product], references: [PK_product])
}

model tbincome {
  PK_income   Int       @id @default(autoincrement())
  date        DateTime
  description String?   @db.VarChar(255)
  total       Decimal   @db.Decimal(10, 2)
  status      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
}

model tbexpenses {
  PK_expense  Int       @id @default(autoincrement())
  date        DateTime
  description String?   @db.VarChar(255)
  total       Decimal   @db.Decimal(10, 2)
  status      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
}
